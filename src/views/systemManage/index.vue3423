var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', [_c('el-row', [_c('el-col', {
    attrs: {
      "span": 24,
      "align": "right"
    }
  }, [_c('div', {
    staticStyle: {
      "margin-top": "10px"
    }
  }, [_c('el-button', {
    attrs: {
      "type": "primary"
    },
    on: {
      "click": _vm.addNewRecord
    }
  }, [_vm._v("添加用户")]), _vm._v(" "), _c('el-input', {
    staticStyle: {
      "width": "200px"
    },
    attrs: {
      "placeholder": "请输入信息"
    },
    model: {
      value: (_vm.filters.key),
      callback: function($$v) {
        _vm.filters.key = $$v
      },
      expression: "filters.key"
    }
  }), _vm._v(" "), _c('el-button', {
    attrs: {
      "type": "primary",
      "icon": "search"
    },
    on: {
      "click": _vm.getUserInfo
    }
  }, [_vm._v("搜索")]), _vm._v(" "), _c('el-button', {
    attrs: {
      "type": "primary"
    },
    on: {
      "click": _vm.flushAll
    }
  }, [_vm._v("刷新")])], 1), _vm._v(" "), _c('el-row', {
    staticStyle: {
      "margin-top": "20px"
    }
  }, [_c('el-col', {
    attrs: {
      "span": 24
    }
  }, [_c('el-table', {
    attrs: {
      "border": "",
      "data": _vm.list
    }
  }, [_c('el-table-column', {
    attrs: {
      "type": "index",
      "width": "90",
      "align": "center"
    }
  }), _vm._v(" "), _vm._l((_vm.props), function(v, k, i) {
    return _c('el-table-column', {
      key: i,
      attrs: {
        "label": _vm.labels[i],
        "align": "center"
      },
      scopedSlots: _vm._u([{
        key: "default",
        fn: function(scope) {
          return [_vm._v("\n                " + _vm._s(scope.row[k]) + "\n              ")]
        }
      }])
    })
  }), _vm._v(" "), _c('el-table-column', {
    attrs: {
      "label": "操作",
      "width": "200",
      "align": "center"
    },
    scopedSlots: _vm._u([{
      key: "default",
      fn: function(scope) {
        return [_c('el-button', {
          attrs: {
            "type": "text"
          },
          on: {
            "click": function($event) {
              _vm.editUsers(scope.row)
            }
          }
        }, [_vm._v("编辑")]), _vm._v(" "), _c('el-button', {
          attrs: {
            "type": "text"
          },
          on: {
            "click": function($event) {
              _vm.deleteUser(scope.row.userID)
            }
          }
        }, [_vm._v("删除")])]
      }
    }])
  })], 2)], 1), _vm._v(" "), _c('el-col', {
    staticStyle: {
      "margin-top": "10px"
    },
    attrs: {
      "span": 24,
      "align": "right"
    }
  }, [_c('el-pagination', {
    attrs: {
      "layout": "prev, pager, next",
      "total": _vm.totalInfo
    },
    on: {
      "current-change": _vm.handleCurrentChange
    }
  })], 1)], 1)], 1)], 1), _vm._v(" "), _c('el-dialog', {
    attrs: {
      "size": "tiny",
      "title": "添加用户",
      "visible": _vm.visible
    },
    on: {
      "update:visible": function($event) {
        _vm.visible = $event
      }
    }
  }, [_c('el-form', {
    ref: "form",
    attrs: {
      "model": _vm.item,
      "rules": _vm.rules,
      "label-width": "100px",
      "label-suffix": ":"
    }
  }, [_c('el-form-item', {
    attrs: {
      "label": "用户名",
      "prop": "userName"
    }
  }, [_c('el-input', {
    staticStyle: {
      "width": "300px"
    },
    attrs: {
      "placeholder": ""
    },
    model: {
      value: (_vm.item.userName),
      callback: function($$v) {
        _vm.item.userName = $$v
      },
      expression: "item.userName"
    }
  })], 1), _vm._v(" "), _c('el-form-item', {
    attrs: {
      "label": "密码",
      "prop": "password"
    }
  }, [_c('el-input', {
    staticStyle: {
      "width": "300px"
    },
    attrs: {
      "type": "password",
      "placeholder": ""
    },
    model: {
      value: (_vm.item.password),
      callback: function($$v) {
        _vm.item.password = $$v
      },
      expression: "item.password"
    }
  })], 1), _vm._v(" "), _c('el-form-item', {
    attrs: {
      "label": "真实姓名"
    }
  }, [_c('el-input', {
    staticStyle: {
      "width": "300px"
    },
    attrs: {
      "placeholder": ""
    },
    model: {
      value: (_vm.item.realName),
      callback: function($$v) {
        _vm.item.realName = $$v
      },
      expression: "item.realName"
    }
  })], 1), _vm._v(" "), _c('el-form-item', {
    attrs: {
      "label": "所属网格"
    }
  }, [_c('el-select', {
    model: {
      value: (_vm.item.netGridID),
      callback: function($$v) {
        _vm.item.netGridID = $$v
      },
      expression: "item.netGridID"
    }
  }, _vm._l((_vm.NetGrid), function(v, i) {
    return _c('el-option', {
      key: i,
      attrs: {
        "value": v.netGridID,
        "label": v.netGridName
      }
    })
  }))], 1), _vm._v(" "), _c('el-form-item', {
    attrs: {
      "label": "角色"
    }
  }, [_c('el-select', {
    model: {
      value: (_vm.item.roleID),
      callback: function($$v) {
        _vm.item.roleID = $$v
      },
      expression: "item.roleID"
    }
  }, _vm._l((_vm.AllRole), function(v, i) {
    return _c('el-option', {
      key: i,
      attrs: {
        "value": v.roleID,
        "label": v.roleName
      }
    })
  }))], 1), _vm._v(" "), _c('el-form-item', {
    attrs: {
      "label": "身份证"
    }
  }, [_c('el-input', {
    staticStyle: {
      "width": "300px"
    },
    attrs: {
      "placeholder": ""
    },
    model: {
      value: (_vm.item.certID),
      callback: function($$v) {
        _vm.item.certID = $$v
      },
      expression: "item.certID"
    }
  })], 1), _vm._v(" "), _c('el-form-item', {
    attrs: {
      "label": "联系电话"
    }
  }, [_c('el-input', {
    staticStyle: {
      "width": "300px"
    },
    attrs: {
      "placeholder": ""
    },
    model: {
      value: (_vm.item.mobileTel),
      callback: function($$v) {
        _vm.item.mobileTel = $$v
      },
      expression: "item.mobileTel"
    }
  })], 1), _vm._v(" "), _c('el-form-item', {
    attrs: {
      "label": "所属部门"
    }
  }, [_c('el-input', {
    staticStyle: {
      "width": "300px"
    },
    attrs: {
      "placeholder": ""
    },
    model: {
      value: (_vm.item.dept),
      callback: function($$v) {
        _vm.item.dept = $$v
      },
      expression: "item.dept"
    }
  })], 1), _vm._v(" "), _c('el-form-item', [_c('el-button', {
    attrs: {
      "type": "warning"
    },
    on: {
      "click": _vm.reset
    }
  }, [_vm._v("重置")]), _vm._v(" "), _c('el-button', {
    attrs: {
      "type": "primary"
    },
    on: {
      "click": _vm.save
    }
  }, [_vm._v("保存")])], 1)], 1)], 1), _vm._v(" "), _c('el-dialog', {
    attrs: {
      "size": "tiny",
      "title": "编辑用户",
      "visible": _vm.visible2
    },
    on: {
      "update:visible": function($event) {
        _vm.visible2 = $event
      },
      "close": function($event) {
        _vm.closeDialog()
      }
    }
  }, [_c('el-form', {
    ref: "form",
    attrs: {
      "model": _vm.editUser,
      "rules": _vm.rules2,
      "label-width": "100px",
      "label-suffix": ":"
    }
  }, [_c('el-form-item', {
    attrs: {
      "label": "用户名",
      "prop": "userName"
    }
  }, [_c('el-input', {
    staticStyle: {
      "width": "300px"
    },
    attrs: {
      "placeholder": ""
    },
    model: {
      value: (_vm.editUser.userName),
      callback: function($$v) {
        _vm.editUser.userName = $$v
      },
      expression: "editUser.userName"
    }
  })], 1), _vm._v(" "), _c('el-form-item', {
    attrs: {
      "label": "密码",
      "prop": "password"
    }
  }, [_c('el-input', {
    staticStyle: {
      "width": "300px"
    },
    attrs: {
      "type": "password",
      "placeholder": "输入新密码(默认不修改)"
    },
    model: {
      value: (_vm.editPassWord),
      callback: function($$v) {
        _vm.editPassWord = $$v
      },
      expression: "editPassWord"
    }
  })], 1), _vm._v(" "), _c('el-form-item', {
    attrs: {
      "label": "真实姓名"
    }
  }, [_c('el-input', {
    staticStyle: {
      "width": "300px"
    },
    attrs: {
      "placeholder": ""
    },
    model: {
      value: (_vm.editUser.realName),
      callback: function($$v) {
        _vm.editUser.realName = $$v
      },
      expression: "editUser.realName"
    }
  })], 1), _vm._v(" "), _c('el-form-item', {
    attrs: {
      "label": "所属网格"
    }
  }, [_c('el-select', {
    model: {
      value: (_vm.editUser.netGridID),
      callback: function($$v) {
        _vm.editUser.netGridID = $$v
      },
      expression: "editUser.netGridID"
    }
  }, _vm._l((_vm.NetGrid), function(v, i) {
    return _c('el-option', {
      key: i,
      attrs: {
        "value": v.netGridID,
        "label": v.netGridName
      }
    })
  }))], 1), _vm._v(" "), _c('el-form-item', {
    attrs: {
      "label": "角色"
    }
  }, [_c('el-select', {
    model: {
      value: (_vm.editUser.roleID),
      callback: function($$v) {
        _vm.editUser.roleID = $$v
      },
      expression: "editUser.roleID"
    }
  }, _vm._l((_vm.AllRole), function(v, i) {
    return _c('el-option', {
      key: i,
      attrs: {
        "value": v.roleID,
        "label": v.roleName
      }
    })
  }))], 1), _vm._v(" "), _c('el-form-item', {
    attrs: {
      "label": "身份证"
    }
  }, [_c('el-input', {
    staticStyle: {
      "width": "300px"
    },
    attrs: {
      "placeholder": ""
    },
    model: {
      value: (_vm.editUser.certID),
      callback: function($$v) {
        _vm.editUser.certID = $$v
      },
      expression: "editUser.certID"
    }
  })], 1), _vm._v(" "), _c('el-form-item', {
    attrs: {
      "label": "联系电话"
    }
  }, [_c('el-input', {
    staticStyle: {
      "width": "300px"
    },
    attrs: {
      "placeholder": ""
    },
    model: {
      value: (_vm.editUser.mobileTel),
      callback: function($$v) {
        _vm.editUser.mobileTel = $$v
      },
      expression: "editUser.mobileTel"
    }
  })], 1), _vm._v(" "), _c('el-form-item', {
    attrs: {
      "label": "所属部门"
    }
  }, [_c('el-input', {
    staticStyle: {
      "width": "300px"
    },
    attrs: {
      "placeholder": ""
    },
    model: {
      value: (_vm.editUser.dept),
      callback: function($$v) {
        _vm.editUser.dept = $$v
      },
      expression: "editUser.dept"
    }
  })], 1), _vm._v(" "), _c('el-form-item', [_c('el-button', {
    attrs: {
      "type": "success"
    },
    on: {
      "click": _vm.update
    }
  }, [_vm._v("更新")])], 1)], 1)], 1)], 1)
}
var staticRenderFns = []
var esExports = { render: render, staticRenderFns: staticRenderFns }
export default esExports


//////////////////
// WEBPACK FOOTER
// ./~/vue-loader/lib/template-compiler?{"id":"data-v-bd6b11c0","hasScoped":true}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/systemManage/index.vue
// module id = ROs4
// module chunks = 127