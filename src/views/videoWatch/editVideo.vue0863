var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticStyle: {
      "padding": "3%"
    }
  }, [_c('el-row', [_c('el-col', {
    attrs: {
      "span": 12
    }
  }, [_c('el-form', {
    ref: "videoForm",
    attrs: {
      "model": _vm.form,
      "label-width": "200px"
    }
  }, [_vm._l((_vm.props), function(v, i) {
    return _c('el-form-item', {
      key: i,
      attrs: {
        "label": v.n,
        "prop": v.v
      }
    }, [(v.v == 'videoTypeValue') ? _c('el-select', {
      model: {
        value: (_vm.form[v.v]),
        callback: function($$v) {
          _vm.$set(_vm.form, v.v, $$v)
        },
        expression: "form[v.v]"
      }
    }, _vm._l((_vm.videoType), function(v) {
      return _c('el-option', {
        key: v.id,
        attrs: {
          "value": v.videoTypeValue,
          "label": v.videoTypeName
        }
      })
    })) : (v.v == 'remarks') ? _c('el-input', {
      attrs: {
        "autosize": "",
        "type": "textarea"
      },
      model: {
        value: (_vm.form[v.v]),
        callback: function($$v) {
          _vm.$set(_vm.form, v.v, $$v)
        },
        expression: "form[v.v]"
      }
    }) : (v.v == 'videoID') ? _c('el-input', {
      attrs: {
        "disabled": ""
      },
      model: {
        value: (_vm.form[v.v]),
        callback: function($$v) {
          _vm.$set(_vm.form, v.v, $$v)
        },
        expression: "form[v.v]"
      }
    }) : _c('el-input', {
      model: {
        value: (_vm.form[v.v]),
        callback: function($$v) {
          _vm.$set(_vm.form, v.v, $$v)
        },
        expression: "form[v.v]"
      }
    })], 1)
  }), _vm._v(" "), _c('el-form-item', {
    attrs: {
      "align": "center"
    }
  }, [_c('el-button', {
    attrs: {
      "type": "warning"
    }
  }, [_vm._v("重置")]), _vm._v(" "), _c('el-button', {
    attrs: {
      "type": "primary"
    },
    on: {
      "click": _vm.updateRecord
    }
  }, [_vm._v("更新")])], 1)], 2)], 1)], 1)], 1)
}
var staticRenderFns = []
var esExports = { render: render, staticRenderFns: staticRenderFns }
export default esExports


//////////////////
// WEBPACK FOOTER
// ./~/vue-loader/lib/template-compiler?{"id":"data-v-4e30293f","hasScoped":true}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/videoWatch/editVideo.vue
// module id = d0cV
// module chunks = 88