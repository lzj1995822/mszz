var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticStyle: {
      "padding": "3%"
    }
  }, [_c('el-row', [_c('el-col', {
    attrs: {
      "span": 14
    }
  }, [_c('el-form', {
    ref: "form",
    attrs: {
      "model": _vm.form,
      "label-width": "200px",
      "label-suffix": "："
    }
  }, [_c('el-form-item', {
    attrs: {
      "label": "上传头像"
    }
  }, [_c('el-upload', {
    staticClass: "avatar-uploader",
    attrs: {
      "action": "",
      "show-file-list": false,
      "http-request": _vm.request
    }
  }, [(_vm.imageUrl) ? _c('img', {
    staticClass: "avatar",
    staticStyle: {
      "width": "150px"
    },
    attrs: {
      "src": _vm.imageUrl
    }
  }) : _c('i', {
    staticClass: "el-icon-plus avatar-uploader-icon"
  })])], 1), _vm._v(" "), _vm._l((_vm.form), function(v, k, i) {
    return _c('el-form-item', {
      key: i,
      attrs: {
        "label": _vm.labels[i],
        "prop": k
      }
    }, [(k == 'netGridID') ? _c('el-cascader', {
      attrs: {
        "options": _vm.NetGrid,
        "props": _vm.props
      },
      on: {
        "change": _vm.changeVal,
        "active-item-change": _vm.handleItemChange
      }
    }) : (k == 'ethnicity') ? _c('el-select', {
      model: {
        value: (_vm.form[k]),
        callback: function($$v) {
          _vm.$set(_vm.form, k, $$v)
        },
        expression: "form[k]"
      }
    }, _vm._l((_vm.EthnicityType), function(v, i) {
      return _c('el-option', {
        key: i,
        attrs: {
          "value": v.ethnicity,
          "label": v.ethnicityName
        }
      })
    })) : (k == 'politics') ? _c('el-select', {
      model: {
        value: (_vm.form[k]),
        callback: function($$v) {
          _vm.$set(_vm.form, k, $$v)
        },
        expression: "form[k]"
      }
    }, _vm._l((_vm.Politics), function(v, i) {
      return _c('el-option', {
        key: i,
        attrs: {
          "value": v.politicsTypeValue,
          "label": v.politicsTypeName
        }
      })
    })) : (k == 'sex') ? _c('el-select', {
      model: {
        value: (_vm.form[k]),
        callback: function($$v) {
          _vm.$set(_vm.form, k, $$v)
        },
        expression: "form[k]"
      }
    }, _vm._l((_vm.sexs), function(v, i) {
      return _c('el-option', {
        key: i,
        attrs: {
          "value": v.v,
          "label": v.l
        }
      })
    })) : (k == 'education') ? _c('el-select', {
      attrs: {
        "placeholder": "请选择学历"
      },
      model: {
        value: (_vm.form[k]),
        callback: function($$v) {
          _vm.$set(_vm.form, k, $$v)
        },
        expression: "form[k]"
      }
    }, _vm._l((_vm.EducationType), function(v) {
      return _c('el-option', {
        key: v.id,
        attrs: {
          "label": v.educationTypeName,
          "value": v.education
        }
      })
    })) : (k == 'position') ? _c('el-select', {
      attrs: {
        "placeholder": "请选择职务"
      },
      model: {
        value: (_vm.form[k]),
        callback: function($$v) {
          _vm.$set(_vm.form, k, $$v)
        },
        expression: "form[k]"
      }
    }, _vm._l((_vm.options), function(v, i) {
      return _c('el-option', {
        key: i,
        attrs: {
          "value": v.value,
          "label": v.label
        }
      })
    })) : (k == 'birthDate') ? _c('el-date-picker', {
      on: {
        "change": _vm.changeDate
      },
      model: {
        value: (_vm.form[k]),
        callback: function($$v) {
          _vm.$set(_vm.form, k, $$v)
        },
        expression: "form[k]"
      }
    }) : _c('el-input', {
      staticStyle: {
        "width": "300px"
      },
      model: {
        value: (_vm.form[k]),
        callback: function($$v) {
          _vm.$set(_vm.form, k, $$v)
        },
        expression: "form[k]"
      }
    })], 1)
  }), _vm._v(" "), _c('el-form-item', [_c('el-button', {
    attrs: {
      "type": "warning"
    },
    on: {
      "click": _vm.reset
    }
  }, [_vm._v("重置")]), _vm._v(" "), _c('el-button', {
    attrs: {
      "type": "primary"
    },
    on: {
      "click": _vm.addNewRecord
    }
  }, [_vm._v("添加")])], 1)], 2)], 1)], 1)], 1)
}
var staticRenderFns = []
var esExports = { render: render, staticRenderFns: staticRenderFns }
export default esExports


//////////////////
// WEBPACK FOOTER
// ./~/vue-loader/lib/template-compiler?{"id":"data-v-4e6d75bb","hasScoped":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/netManage/addGridMember.vue
// module id = BtqL
// module chunks = 152